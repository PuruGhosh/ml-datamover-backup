plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.xperi.datamover'
version = '1.43.499'
sourceCompatibility = '15'

if (System.getProperty("BUILD_VERSION")) {
    version = System.getProperty("BUILD_VERSION")
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

ext {
    set('testcontainersVersion', "1.17.2")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.data:spring-data-mongodb:3.1.5'
    implementation 'org.mongodb:mongo-java-driver:3.12.8'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    compileOnly 'org.projectlombok:lombok:1.18.16'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.2'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'org.apache.avro:avro:1.11.1'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'io.confluent:kafka-avro-serializer:5.3.0'


    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0:'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.1.2'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '3.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testImplementation 'org.mockito:mockito-core:2.+'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '2.15.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.28'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    useJUnitPlatform()

    // Commented as: build issue in jenkins docker environment, moockito setup IO exception
    // Purpose: test without this.
//    def directory = file("$buildDir/tmp/tests")
//    systemProperty "java.io.tmpdir", directory
//
//    doLast {
//        directory.mkdirs()
//    }
}

///////////////////////////////////////////////////////////////////////////////
def getPropOrEnv(key) {
    def res = System.getProperty(key)
    if (res == null) {
        res = System.getenv(key)
    }
    return res
}

